.main-button {
  display: inline-block;
  box-sizing: border-box;
  padding: 12px 26px 13px;
  border: 3px solid;
  border-radius: 30px;
  text-align: center;
  font-size: 18px;
  line-height: 24px;
  font-weight: 700;
  text-decoration: none;
  background-color: transparent;
  background-repeat: no-repeat;
  background-size: 100% 0;
  background-position: center;
  cursor: pointer;
  transition:
    color $little-interaction-duration $little-interaction-timing-function,
    background-size $little-interaction-duration $little-interaction-timing-function;

  &--growing {
    @media (min-width: $laptop-width) {
      padding-top: 11px;
      padding-bottom: 11px;
      font-size: 21px;
      line-height: 28px;
    }
  }

  &:disabled {
    text-decoration: line-through 2px;
    pointer-events: none;
  }
}

.main-button--primary {
  --spiner-color: var(--text-alter-color);

  border-color: var(--accent-color);
  color: var(--accent-color);
  background-image: linear-gradient(var(--accent-color), var(--accent-color));

  &:hover {
    color: var(--text-alter-color);
    background-size: 100% 100%;
  }

  &:active {
    color: var(--text-alter-color-30);
    background-size: 100% 100%;
  }
}

.main-button--alter {
  --spiner-color: var(--accent-color);

  border-color: var(--text-alter-color);
  color: var(--text-alter-color);
  background-image: linear-gradient(var(--background-color), var(--background-color));

  &:hover {
    color: var(--accent-color);
    background-size: 100% 100%;
  }

  &:active {
    color: var(--accent-color-30);
    background-size: 100% 100%;
  }
}

.main-button--shy {
  --spiner-color: var(--text-alter-color);

  border-color: var(--text-color);
  color: var(--text-color);
  background-image: linear-gradient(var(--background-alter-additional-color), var(--background-alter-additional-color));
  opacity: 0.1;
  transition:
    color $little-interaction-duration $little-interaction-timing-function,
    background-size $little-interaction-duration $little-interaction-timing-function,
    opacity $little-interaction-duration $little-interaction-timing-function;

  &:hover {
    opacity: 0.3;
  }

  &:active {
    color: var(--text-alter-color-30);
    background-size: 100% 100%;
    opacity: 0.3;
  }
}

.main-button--pending {
  position: relative;
  color: transparent;
  background-size: 100% 100%;
  pointer-events: none;

  &::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    border: 4px solid var(--spiner-color);
    border-right-color: transparent;
    border-radius: 50%;
    animation: button-spinner 600ms linear infinite;
  }
}

/*
 * Можно ли для hover-эффекта использовать элемент меняющий scaleY от 0 до 1?
 * Ведь трансформации производительнее, поскольку в отличие от изменения фона
 * влияют на область «Composite», а не на предшествующую ей «Paint»...
 * Нет. Из-за скругленных углов между рамкой и элементом с фоном появлялись
 * «незакрашенные» полупрозрачные пиксели.
 */
